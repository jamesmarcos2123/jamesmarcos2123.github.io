{"version":3,"sources":["pages/home/style.ts","services/api.ts","assests/logo-github.svg","pages/home/index.tsx","pages/repository/style.ts","pages/repository/index.tsx","routes/index.tsx","assests/github-background.svg","style/global/index.ts","App.tsx","index.tsx"],"names":["Title","styled","h1","Form","form","props","hasError","css","shade","Container","section","Repository","Error","span","api","axios","create","baseURL","Home","useState","storageRepositores","localStorage","getItem","JSON","parse","repositories","setRepositories","newRepo","setNewRepo","inputErro","setInputError","event","a","preventDefault","toast","error","isPossibleAddInCache","forEach","e","full_name","toLowerCase","includes","toLocaleLowerCase","get","response","repository","data","success","console","log","useEffect","setItem","stringify","src","Logo","alt","onSubmit","action","value","onChange","target","type","id","placeholder","map","repo","to","owner","avatar_url","login","description","size","className","onClick","nameRepo","filter","item","Header","header","InfoRepo","Issues","setRepository","issues","setIssues","params","useRouteMatch","then","stargazers_count","forks_count","open_issues_count","issue","href","html_url","title","user","Routes","exact","path","component","createGlobalStyle","GitHubImage","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.159e53a0.chunk.js","sourcesContent":["import styled, { css } from \"styled-components\";\r\nimport { shade } from \"polished\";\r\n\r\ninterface FormProps {\r\n  hasError: boolean;\r\n}\r\n\r\nexport const Title = styled.h1`\r\n  font-size: 48px;\r\n  color: #3a3a3a;\r\n  max-width: 650px;\r\n  line-height: 56px;\r\n  margin-top: 80px;\r\n`;\r\n\r\nexport const Form = styled.form<FormProps>`\r\n  margin-top: 40px;\r\n  max-width: 700px;\r\n  display: flex;\r\n\r\n  input {\r\n    flex: 1;\r\n    height: 70px;\r\n    padding: 0 24px;\r\n    border: 0;\r\n    border-radius: 5px 0 0 5px;\r\n\r\n    ${(props) =>\r\n      props.hasError &&\r\n      css`\r\n        border: 1px red solid;\r\n      `}\r\n\r\n    &::placeholder {\r\n      color: #a8a8b3;\r\n    }\r\n  }\r\n\r\n  button {\r\n    width: 200px;\r\n    height: 70px;\r\n    background-color: #00d25a;\r\n    border-radius: 0 5px 5px 0;\r\n    border: 0;\r\n    color: #fff;\r\n    font-weight: bold;\r\n    transition: 0.5s;\r\n\r\n    &:hover {\r\n      transition: 0.5s;\r\n      background: ${shade(0.2, \"#00D25A\")};\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Container = styled.section`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: row;\r\n  margin-top: 30px;\r\n  max-width: 700px;\r\n`;\r\n\r\nexport const Repository = styled.form`\r\n  #delete {\r\n    margin-left: 3%;\r\n    color: #ff9800;\r\n    &:hover {\r\n      transition: 0.5s;\r\n      color: ${shade(0.2, \"#ff5722\")};\r\n      cursor: pointer;\r\n    }\r\n  }\r\n\r\n  a {\r\n    background-color: #fff;\r\n    border-radius: 5px;\r\n    width: 100%;\r\n    padding: 24px;\r\n    display: flex;\r\n    text-decoration: none;\r\n    align-items: center;\r\n    transition: 0.5s;\r\n\r\n    &:hover {\r\n      transform: translateX(10px);\r\n    }\r\n\r\n    & + a {\r\n      margin-top: 18px;\r\n    }\r\n\r\n    img {\r\n      width: 65px;\r\n      height: 65px;\r\n      border-radius: 50%50%;\r\n    }\r\n\r\n    div {\r\n      margin-left: 16px;\r\n\r\n      strong {\r\n        font-size: 20px;\r\n        color: #3d3d4d;\r\n      }\r\n      p {\r\n        font-size: 18px;\r\n        color: #3d3d4d;\r\n      }\r\n    }\r\n\r\n    svg {\r\n      margin-left: auto;\r\n      color: #cbcbd6;\r\n    }\r\n  }\r\n`;\r\nexport const Error = styled.span`\r\n  display: block;\r\n  color: red;\r\n  margin-top: 10px;\r\n`;\r\n","import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n    baseURL:'https://api.github.com/',\r\n})\r\n\r\nexport default api;","export default __webpack_public_path__ + \"static/media/logo-github.6354bf3f.svg\";","import React, { useState, FormEvent, useEffect } from \"react\";\r\nimport { Title, Form, Repository, Error, Container } from \"./style\";\r\nimport api from \"../../services/api\";\r\nimport Logo from \"../../assests/logo-github.svg\";\r\nimport { FiChevronRight } from \"react-icons/fi\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ninterface Repository {\r\n  full_name: string;\r\n  description: string;\r\n  owner: {\r\n    login: string;\r\n    avatar_url: string;\r\n  };\r\n}\r\n\r\nconst Home: React.FC = () => {\r\n  const [repositories, setRepositories] = useState<Repository[]>(() => {\r\n    const storageRepositores = localStorage.getItem(\"@githubexplporer\");\r\n\r\n    if (storageRepositores) {\r\n      return JSON.parse(storageRepositores);\r\n    } else {\r\n      return [];\r\n    }\r\n  });\r\n  const [newRepo, setNewRepo] = useState(\"\");\r\n  const [inputErro, setInputError] = useState(\" \");\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"@githubexplporer\", JSON.stringify(repositories));\r\n  }, [repositories]);\r\n\r\n  async function handleAddRepository(event: FormEvent<HTMLFormElement>) {\r\n    event.preventDefault();\r\n    if (!newRepo) {\r\n      setInputError(\"digite o nome do repositório\");\r\n      toast.error(\"Este campo está vazio\");\r\n      return;\r\n    }\r\n\r\n    let isPossibleAddInCache = true;\r\n    repositories.forEach((e) => {\r\n      if (e.full_name.toLowerCase().includes(newRepo.toLocaleLowerCase())) {\r\n        setInputError(\"digite o nome do repositório\");\r\n        toast.error(\"Repositorio já existente\");\r\n        isPossibleAddInCache = false;\r\n        return;\r\n      }\r\n    });\r\n\r\n    try {\r\n      //add novos repositórios\r\n      if (isPossibleAddInCache) {\r\n        const response = await api.get(`repos/${newRepo}`);\r\n        const repository = response.data;\r\n        setRepositories([...repositories, repository]);\r\n        setNewRepo(\"\");\r\n        setInputError(\"\");\r\n        toast.success(\"adicionado com sucesso\");\r\n        console.log(repositories);\r\n      }\r\n    } catch {\r\n      toast.error(\"deu erro\");\r\n    }\r\n  }\r\n\r\n  function deleteRepo(nameRepo: string) {\r\n    setRepositories(repositories.filter((item) => item.full_name !== nameRepo));\r\n    toast.success(\"Removido com sucesso\");\r\n    console.log(repositories);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <img src={Logo} alt=\"Logo App\" />\r\n      <Title>Encontre repositórios no GitHub</Title>\r\n      <Form hasError={!!inputErro} onSubmit={handleAddRepository} action=\" \">\r\n        <input\r\n          value={newRepo}\r\n          onChange={(e) => setNewRepo(e.target.value)}\r\n          type=\"text\"\r\n          id=\"input-search\"\r\n          placeholder=\"Digite o nome do repositório\"\r\n        />\r\n\r\n        <button type=\"submit\" id=\"button-submit\">\r\n          {\" \"}\r\n          Pesquisar{\" \"}\r\n        </button>\r\n      </Form>\r\n      {inputErro && <Error>{inputErro}</Error>}\r\n\r\n      <Repository>\r\n        {repositories.map((repo) => (\r\n          <Container>\r\n            <Link key={repo.full_name} to={`repo/${repo.full_name}`}>\r\n              <img src={repo.owner.avatar_url} alt={repo.owner.login} />\r\n              <div>\r\n                <strong>{repo.full_name}</strong>\r\n                <p>{repo.description}</p>\r\n              </div>\r\n              <FiChevronRight size={40}></FiChevronRight>\r\n            </Link>\r\n            <div className=\"traco\"></div>\r\n            <p onClick={() => deleteRepo(repo.full_name)} id=\"delete\">\r\n              Excluir\r\n            </p>\r\n          </Container>\r\n        ))}\r\n      </Repository>\r\n    </>\r\n  );\r\n};\r\nexport default Home;\r\n","import styled, {css} from 'styled-components';\r\nimport {shade} from 'polished';\r\n\r\ninterface FormProps{\r\n    hasError: boolean;\r\n}\r\n\r\nexport const Header = styled.header `\r\n\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n\r\n    a{\r\n        display: flex;\r\n        align-items: center;\r\n        text-decoration: none;\r\n        color: #a8a8b3;\r\n        transition: color 0.2s;\r\n\r\n        &:hover{\r\n            color: #666;\r\n        }\r\n\r\n        svg{\r\n            margin-right: 4px;\r\n        }\r\n    }\r\n\r\n  \r\n`\r\nexport const InfoRepo = styled.section `\r\n\r\n    margin-top: 80px;\r\n    margin-bottom: 50px;\r\n\r\n    header{\r\n        display: flex;\r\n\r\n        img{\r\n            width: 200px;\r\n            height: 200px;\r\n            border-radius: 50%;\r\n            margin-right: 5%;\r\n        }\r\n\r\n        div{\r\n            margin-top: 15px;\r\n\r\n            strong {\r\n                font-size: 25px;\r\n                color: #3D3D4D;\r\n            }\r\n            p{\r\n                font-size: 15px;\r\n                color: #3D3D4D;\r\n                margin-top: 5%;\r\n            }\r\n        }\r\n    }\r\n\r\n    ul{\r\n        display: flex;\r\n        list-style: none;\r\n        margin-top: 40px;\r\n\r\n        li{\r\n\r\n            & + li{\r\n                margin-left: 80px\r\n            }\r\n            strong{\r\n                display:block;\r\n                font-size: 36px;\r\n                font-weight: bold;\r\n                color: #333333;\r\n            }\r\n            span{\r\n                display: block;\r\n                margin-top: 4px;\r\n                color: #949494;\r\n            }\r\n        }\r\n    }\r\n\r\n`\r\n\r\n\r\nexport const Issues = styled.section`\r\n\r\na{\r\n        background-color: #FFF;\r\n        border-radius: 5px;\r\n        width: 100%;\r\n        padding: 24px;\r\n        display: flex;\r\n        text-decoration: none;\r\n        align-items: center;\r\n        transition: 0.5s;\r\n\r\n        &:hover{\r\n            transform: translateX(10px);\r\n        }\r\n\r\n        & + a {\r\n            margin-top: 18px;\r\n        }\r\n\r\n        div{\r\n            margin-left: 16px;\r\n\r\n            strong {\r\n                font-size: 20px;\r\n                color: #3D3D4D;\r\n            }\r\n            p{\r\n                font-size: 18px;\r\n                color: #3D3D4D;\r\n            }\r\n        }\r\n\r\n        svg{\r\n            margin-left: auto;\r\n            color: #cbcbd6;\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n`","import React, { useState, useEffect } from \"react\";\r\nimport { Header, InfoRepo, Issues } from \"./style\";\r\nimport Logo from \"../../assests/logo-github.svg\";\r\nimport { Link, useRouteMatch } from \"react-router-dom\";\r\nimport { FiChevronLeft, FiChevronRight } from \"react-icons/fi\";\r\nimport api from \"../../services/api\";\r\n\r\ninterface RepositoryParam {\r\n  repository: string;\r\n}\r\n\r\ninterface Repository {\r\n  repository: string;\r\n  full_name: string;\r\n  description: string;\r\n  forks_count: number;\r\n  stargazers_count: number;\r\n  open_issues_count: number;\r\n\r\n  owner: {\r\n    login: string;\r\n    avatar_url: string;\r\n  };\r\n}\r\n\r\ninterface Issue {\r\n  id: number;\r\n  title: string;\r\n  html_url: string;\r\n  user: {\r\n    login: string;\r\n  };\r\n}\r\n\r\nconst Repository: React.FunctionComponent = () => {\r\n  const [repository, setRepository] = useState<Repository | null>(null);\r\n  const [issues, setIssues] = useState<Issue[]>([]);\r\n  const { params } = useRouteMatch<RepositoryParam>();\r\n\r\n  useEffect(() => {\r\n    api.get(`repos/${params.repository}`).then((response) => {\r\n      console.log(response.data);\r\n      setRepository(response.data);\r\n    });\r\n\r\n    api.get(`repos/${params.repository}/issues`).then((response) => {\r\n      console.log(response.data);\r\n      setIssues(response.data);\r\n    });\r\n\r\n    // async function loadData(): Promise<void> {\r\n    //     const [ repository, issues] = await Promise.all([\r\n    //         api.get(`repos/${params.repository}`),\r\n    //         api.get(`repos/${params.repository}/issues`)\r\n    //     ])\r\n\r\n    //     console.log('repository', repository);\r\n    //     console.log('issues', issues.data);\r\n\r\n    // }\r\n\r\n    // loadData()\r\n  }, [params.repository]);\r\n\r\n  return (\r\n    <>\r\n      <Header>\r\n        <img src={Logo} alt=\"Logo App\" />\r\n        <Link to=\"/\">\r\n          {\" \"}\r\n          <FiChevronLeft size={30} />\r\n          Voltar\r\n        </Link>\r\n      </Header>\r\n\r\n      {\r\n        <InfoRepo>\r\n          <header>\r\n            <img\r\n              src={repository?.owner.avatar_url}\r\n              alt={repository?.full_name}\r\n            />\r\n            <div>\r\n              <strong>{repository?.full_name}</strong>\r\n              <p>{repository?.description}</p>\r\n            </div>\r\n          </header>\r\n\r\n          <ul>\r\n            <li>\r\n              <strong>{repository?.stargazers_count}</strong>\r\n              <span>Start</span>\r\n            </li>\r\n            <li>\r\n              <strong>{repository?.forks_count}</strong>\r\n              <span>Forks</span>\r\n            </li>\r\n            <li>\r\n              <strong>{repository?.open_issues_count}</strong>\r\n              <span>Issues abertas</span>\r\n            </li>\r\n          </ul>\r\n        </InfoRepo>\r\n      }\r\n\r\n      <Issues>\r\n        {issues.map((issue) => (\r\n          <a key={issue.id} href={issue.html_url}>\r\n            <div>\r\n              <strong>{issue.title}</strong>\r\n              <p>{issue.user.login}</p>\r\n            </div>\r\n            <FiChevronRight size={40}></FiChevronRight>\r\n          </a>\r\n        ))}\r\n      </Issues>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Repository;\r\n","import React from 'react';\r\nimport {Switch, Route} from 'react-router-dom'\r\n\r\n\r\nimport Home from '../pages/home';\r\nimport Repository from '../pages/repository';\r\n\r\nconst Routes: React.FC = () => {\r\n    return (\r\n        <Switch>\r\n            <Route exact path=\"/\" component={Home}></Route>\r\n            <Route path=\"/repo/:repository+\" component={Repository}></Route>\r\n        </Switch>\r\n    );\r\n}\r\n\r\nexport default Routes;","export default __webpack_public_path__ + \"static/media/github-background.2b8edc72.svg\";","import {createGlobalStyle} from 'styled-components';\r\nimport GitHubImage from '../../assests/github-background.svg'\r\n\r\nexport default createGlobalStyle `\r\n    *{\r\n        margin: 0;\r\n        padding: 0%;\r\n        outline: 0;\r\n        box-sizing: border-box;\r\n    }\r\n\r\n    body{\r\n        background: #F0F0F5 url(${GitHubImage}) no-repeat 70%;\r\n    }\r\n\r\n    body, input , button {\r\n        font: 16px Roboto, sans-serif;\r\n    }\r\n\r\n    #root{\r\n        max-width: 968px;\r\n        margin: 0 auto;\r\n        padding: 40px 20px\r\n    }\r\n\r\n    button{\r\n        cursor: pointer;\r\n    }\r\n`\r\n\r\n","import React from 'react';\r\nimport Routes from './routes';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport GlobalStyle from './style/global';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport {ToastContainer} from 'react-toastify';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n    <BrowserRouter>\r\n      <Routes/>\r\n    </BrowserRouter>\r\n    <GlobalStyle/>\r\n    <ToastContainer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}